// Code generated by goagen v1.2.0-dirty, DO NOT EDIT.
//
// API "samclick": Application User Types
//
// Command:
// $ goagen
// --design=github.com/kasoshojo/api/design
// --out=$(GOPATH)src/github.com/kasoshojo/api
// --version=v1.2.0-dirty

package app

import (
	"github.com/goadesign/goa"
)

// registerrequest user type.
type registerrequest struct {
	// First name
	Fname *string `form:"fname,omitempty" json:"fname,omitempty" xml:"fname,omitempty"`
	// Last name
	Lname *string `form:"lname,omitempty" json:"lname,omitempty" xml:"lname,omitempty"`
	// Login password
	Pwd *string `form:"pwd,omitempty" json:"pwd,omitempty" xml:"pwd,omitempty"`
	// Referrer userid
	Referrer *int `form:"referrer,omitempty" json:"referrer,omitempty" xml:"referrer,omitempty"`
	// Secret answer
	SecretAnswer *string `form:"secret_answer,omitempty" json:"secret_answer,omitempty" xml:"secret_answer,omitempty"`
	// Secret question
	SecretQuestion *string `form:"secret_question,omitempty" json:"secret_question,omitempty" xml:"secret_question,omitempty"`
	// Login username
	User *string `form:"user,omitempty" json:"user,omitempty" xml:"user,omitempty"`
}

// Validate validates the registerrequest type instance.
func (ut *registerrequest) Validate() (err error) {
	if ut.User == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "user"))
	}
	if ut.Pwd == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "pwd"))
	}
	if ut.SecretQuestion == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "secret_question"))
	}
	if ut.SecretAnswer == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "secret_answer"))
	}
	return
}

// Publicize creates Registerrequest from registerrequest
func (ut *registerrequest) Publicize() *Registerrequest {
	var pub Registerrequest
	if ut.Fname != nil {
		pub.Fname = ut.Fname
	}
	if ut.Lname != nil {
		pub.Lname = ut.Lname
	}
	if ut.Pwd != nil {
		pub.Pwd = *ut.Pwd
	}
	if ut.Referrer != nil {
		pub.Referrer = ut.Referrer
	}
	if ut.SecretAnswer != nil {
		pub.SecretAnswer = *ut.SecretAnswer
	}
	if ut.SecretQuestion != nil {
		pub.SecretQuestion = *ut.SecretQuestion
	}
	if ut.User != nil {
		pub.User = *ut.User
	}
	return &pub
}

// Registerrequest user type.
type Registerrequest struct {
	// First name
	Fname *string `form:"fname,omitempty" json:"fname,omitempty" xml:"fname,omitempty"`
	// Last name
	Lname *string `form:"lname,omitempty" json:"lname,omitempty" xml:"lname,omitempty"`
	// Login password
	Pwd string `form:"pwd" json:"pwd" xml:"pwd"`
	// Referrer userid
	Referrer *int `form:"referrer,omitempty" json:"referrer,omitempty" xml:"referrer,omitempty"`
	// Secret answer
	SecretAnswer string `form:"secret_answer" json:"secret_answer" xml:"secret_answer"`
	// Secret question
	SecretQuestion string `form:"secret_question" json:"secret_question" xml:"secret_question"`
	// Login username
	User string `form:"user" json:"user" xml:"user"`
}

// Validate validates the Registerrequest type instance.
func (ut *Registerrequest) Validate() (err error) {
	if ut.User == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "user"))
	}
	if ut.Pwd == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "pwd"))
	}
	if ut.SecretQuestion == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "secret_question"))
	}
	if ut.SecretAnswer == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "secret_answer"))
	}
	return
}
